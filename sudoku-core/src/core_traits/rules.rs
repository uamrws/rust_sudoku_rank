/*
1. 将每一行的结果确定
   a. 当前格为空白处的，值等于「1-9」的集合减去「当前行所有确定的数的集合」
   b. 如果当前格为集合的，且减去「所有其他格的集合的并集」为1的，可以确定当前处的值为差集所得数
2. 将每一宫的结果确定
   确定方法一致
3. 将每一竖的结果确定
   确定方法一致
4. 重复1-3的流程2-3次后，如果校验后未解出答案说明数独需要试数
5. 试数步骤将某一处的集合暂时取值后重复1-4的解题步骤，直到得出结果，存起来，继续试数得出其他结果

数独解法规则：
规则 1 显式唯一候选数法(Naked Single): 权重 1
    若某行，或列， 或九宫格中的某个空格候选数唯一，那么该候选数就填该 空格。

规则 2 隐式唯一候选数法(Hidden Single): 权重 5
    若某个候选 数只出现在某行，或列，或九宫格的某个空格中，那么该空 格就填该候选数。

规则 3 显式二数集删减法(Naked Pair): 权重 10
    若某行，或列， 或九宫格中的某 2 个空格的候选数恰好为 2 个，那么这 2 个候选数可以从该行，或列，或九宫格的其他空格候选数中 删除。

规则 4 隐式二数集删减法(Hidden Pair): 权重 15
    若某 2 个候选 数只出现在某行，或列，或九宫格中的某 2 个空格中，那么 这 2 个空格中不同于这 2 个候选数的其他候选数可删除。

规则 5 显式三数集删减法(Naked Triplet): 权重 20
    若某行，或列， 或九宫格中的某 3 个空格的候选数恰好为 3 个，那么这 3 个候选数可以从该行，或列，或九宫格的其他空格候选数中删除。

规则 6 隐式三数集删减法(Hidden Triplet): 权重 25
    若某 3 个候选数只出现在某行，或列，或九宫格中的某 3 个空格中，那 么这 3 个空格中不同于这 3 个候选数的其他候选数可删除。

规则 7 显式四数集删减法(Naked Quad): 权重 30
    若某行，或列， 或九宫格中的某 4 个空格的候选数恰好为 4 个，那么这 4 个候选数可以从该行，或列，或九宫格的其他空格候选数中 删除。

规则 8 隐式四数集删减法(Hidden Quad): 权重 35
    若某 4 个候选 数只出现在某行，或列，或九宫格中的某 4 个空格中，那么 这 4 个空格中不同于这 4 个候选数的其他候选数可删除。

规则 9 区块删减法(Intersection Removel): 权重 40
    区块对行的影响:在某一区块中，当所有可能出现某1个或2个数字的单元格都位于同一行时，就可以把这个数字从该行的 其他单元格的候选数中删除。
    区块对列的影响:在某一区块中，当所有可能出现某1个或2个数字的单元格都位于同一列时，就可以把这个数字从该列的 其他单元格的候选数中删除。
    行或列对区块的影响:在某一行(列)中，当所有可能出现某1个或2个数字的单元格都位于同一区块中时，就可以把这个数 字从该区块的其他单元格的候选数中删除。

规则 10 矩形对角线删减法(X-wing): 权重 500
    如果一个数字正好 出现且只出现在某 2 行(列)相同的 2 列(行)上，则这个数字就 可以从这 2 列(行)上其他单元格的候选数中删除。

规则 11 三链数删减法(Swordfish): 权重 1000
    如果某个数字在某 3 列(行)中只出现在相同的 3 行(列)中，则这个数字将从这 3 行(列)上其他的候选数中删除。

规则 12 XY 形态匹配法(XY-wing): 权重 3000
    若 XY 和 YZ 同在一 个区块但不同行(列)中，而 XZ 和 XY 在同一行(列)，但在不 同区块中。那么在 XY 所在区块中与 XY 所在行(列)交集空 格中应该删除候选数 Z，并且在 XZ 所在区块与 YZ 所在行 (列)交集的空格中应该删除候选数 Z。其中，XY、YZ、XZ 分别是三空格的候选数，并且这三空格没有其他候选数。

规则 13 XYZ 形态匹配法(XYZ-wing): 权重 5000
    若某区块某空格 候选数为 XYZ，在该同区块但不同列(行)的某空格候选数为 YZ，且与 XYZ 所在空格同列(行)但不同区块某空格候选数为 XZ，那么 XYZ 所在区块与 XZ 所在列(行)的交集中的空格候 选数不能为 Z。

规则 14 试探法(Trial-And-Error): 权重 8000
    若某个空格的候选数只有 2 个时，进 行试探填写其中一个候选数，若填写成功则该试探成功，若 导致矛盾则另外一个候选数应填该空格。


Resources:
  - The Sudoku Rules
    https://sudoku.com/sudoku-rules/

*/

use phf::phf_map;

const UNKNOWN_FLAG: u16 = 0b10_0000_0000;

static KNOWN_MAP: phf::Map<u16, u16> = phf_map! {
    0b1_0_0000_0001_u16 => 1,
    0b1_0_0000_0010_u16 => 2,
    0b1_0_0000_0100_u16 => 3,
    0b1_0_0000_1000_u16 => 4,
    0b1_0_0001_0000_u16 => 5,
    0b1_0_0010_0000_u16 => 6,
    0b1_0_0100_0000_u16 => 7,
    0b1_0_1000_0000_u16 => 8,
    0b1_1_0000_0000_u16 => 9,
};

/// 针对单独的某行(列/宫)的解题规则
pub trait SeparateRule {
    /// 显式唯一候选数法(Naked Single):
    /// 若某行，或列， 或九宫格中的某个空格候选数唯一，那么该候选数就填该 空格。
    fn naked_single(&mut self) -> u16;

    /// 显式二数集删减法(Naked Pair):
    /// 若某行，或列， 或九宫格中的某 2 个空格的候选数恰好为 2 个，那么这 2 个候选数可以从该行，或列，或九宫格的其他空格候选数中 删除。
    fn naked_pair(&mut self) -> u16;

    /// 显式三数集删减法(Naked Triplet):
    /// 若某行，或列， 或九宫格中的某 3 个空格的候选数恰好为 3 个，那么这 3 个候选数可以从该行，或列，或九宫格的其他空格候选数中删除。
    fn naked_triplet(&mut self) -> u16;

    /// 显式四数集删减法(Naked Quad):
    /// 若某行，或列， 或九宫格中的某 4 个空格的候选数恰好为 4 个，那么这 4 个候选数可以从该行，或列，或九宫格的其他空格候选数中 删除。
    fn naked_quad(&mut self) -> u16;

    /// 隐式唯一候选数法(Hidden Single):
    /// 若某个候选 数只出现在某行，或列，或九宫格的某个空格中，那么该空 格就填该候选数。
    fn hidden_single(&mut self) -> u16;

    /// 隐式二数集删减法(Hidden Pair):
    /// 若某 2 个候选 数只出现在某行，或列，或九宫格中的某 2 个空格中，那么 这 2 个空格中不同于这 2 个候选数的其他候选数可删除。
    fn hidden_pair(&mut self) -> u16;

    /// 隐式三数集删减法(Hidden Triplet):
    /// 若某 3 个候选数只出现在某行，或列，或九宫格中的某 3 个空格中，那 么这 3 个空格中不同于这 3 个候选数的其他候选数可删除。
    fn hidden_triplet(&mut self) -> u16;

    /// 隐式四数集删减法(Hidden Quad):
    /// 若某 4 个候选 数只出现在某行，或列，或九宫格中的某 4 个空格中，那么 这 4 个空格中不同于这 4 个候选数的其他候选数可删除。
    fn hidden_quad(&mut self) -> u16;

    /// 区块删减法(Intersection Removel)
    /// 区块对行的影响:在某一区块中，当所有可能出现某个数字的单元格都位于同一行时，就可以把这个数字从该行的其他单元格的候选数中删除。
    /// 区块对列的影响:在某一区块中，当所有可能出现某个数字的单元格都位于同一列时，就可以把这个数字从该列的其他单元格的候选数中删除。
    /// 行或列对区块的影响:在某一行(列)中，当所有可能出现某个数字的单元格都位于同一区块中时，就可以把这个数字从该区块的其他单元格的候选数中删除。
    fn intersection_removel(&mut self) -> u16;
}

/// 多个行/列/宫组合解题的方法
pub trait CombineRule {
    /// 矩形对角线删减法(X-wing):
    /// 如果一个数字正好 出现且只出现在某 2 行(列)相同的 2 列(行)上，则这个数字就 可以从这 2 列(行)上其他单元格的候选数中删除。
    fn x_wing(&mut self);

    /// XY 形态匹配法(XY-wing):
    /// 若 XY 和 YZ 同在一 个区块但不同行(列)中，而 XZ 和 XY 在同一行(列)，但在不 同区块中。那么在 XY 所在区块中与 XY 所在行(列)交集空 格中应该删除候选数 Z，并且在 XZ 所在区块与 YZ 所在行 (列)交集的空格中应该删除候选数 Z。其中，XY、YZ、XZ 分别是三空格的候选数，并且这三空格没有其他候选数。
    fn xy_wing(&mut self);

    /// XYZ 形态匹配法(XYZ-wing):
    /// 若某区块某空格 候选数为 XYZ，在该同区块但不同列(行)的某空格候选数为 YZ，且与 XYZ 所在空格同列(行)但不同区块某空格候选数为 XZ，那么 XYZ 所在区块与 XZ 所在列(行)的交集中的空格候 选数不能为 Z。
    fn xyz_wing(&mut self);

    /// 三链数删减法(Swordfish):
    /// 如果某个数字在某 3 列(行)中只出现在相同的 3 行(列)中，则这个数字将从这 3 行(列)上其他的候选数中删除。
    fn swordfish(&mut self);

    /// 试探法(Trial-And-Error):
    /// 若某个空格的候选数只有 2 个时，进行试探填写其中一个候选数，若填写成功则该试探成功，若导致矛盾则另外一个候选数应填该空格。
    fn trial_and_error(&mut self);
}
